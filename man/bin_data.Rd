% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bin_data.R
\name{bin_data}
\alias{bin_data}
\title{Map a vector of numeric values into bins}
\usage{
bin_data(vals = NULL, dt = NULL, binCol = NULL, bins = 10,
  binType = "explicit", boundaryType = "lcro]", returnDT = FALSE)
}
\arguments{
\item{vals}{A vector of values}

\item{dt}{A data.table object}

\item{binCol}{A a column of \code{dt} specifying the values to bin}

\item{bins}{One of: \cr
- single integer specifying number of bins to generate
- vector of numbers specifying sequential bin boundaries {(x0, x1), (x1, x2), ..., (xn-1, xn)}
- 2-column data.frame/data.table specifiying left-bounds and right-bounds}

\item{binType}{One of: \cr
- "explicit" - generate bin values as they are given
- "quantile" - generate bins based on quantiles (empty quantile bins will be discarded) ... needs improvement}

\item{boundaryType}{One of: \cr
- "lcro]" - bins are [left-closed, right-open) except for last bin which is (left-closed, right-closed]
- "lcro)" - bins are [left-closed, right-open)
- "[lorc" - bins are (left-open, right-closed] except for first bin which is [left-closed, right-closed]
- "(lorc" - bins are (left-open, right-closed]}

\item{returnDT}{If FALSE, return an ordered factor of bins corresponding to the values given, else return \cr
a data.table object which includes all bins and values (makes a copy of \code{dt} if given)}
}
\description{
Takes a vector of values and bin parameters and maps each value to an ordered factor whose levels are a set of bins like [0,1), [1,2), [2,3).\cr
\cr
Values may be provided as a vector or via a pair of parameters - a data.table object and the name of the column to bin.
}
\details{
This method can return two different types of output, depending on where \code{returnDT} is \code{TRUE} or \code{FALSE}.

If \code{returnDT=FALSE}, returns an ordered factor vector of bins like [1, 2), [-3,-2), ... corresponding to the values which were
binned and whose levels correspond to all the generated bins. (Note that empty bins may be present as unused factor levels).

If \code{returnDT=TRUE}, returns a data.table object with all values and all bins (including empty bins). If \code{dt} is provided
instead of \code{vals}, a full copy of \code{dt} is created and merged with the set of generated bins.
}
\examples{
iris.dt <- data.table(iris)
bin_data(dt=iris.dt, binCol="Sepal.Length", bins=c(4, 5, 6, 7, 8))
bin_data(vals=iris$Petal.Length, bins=10, returnDT=TRUE)  # 10 equally spaced bins
bin_data(vals=c(0,0,1,2), bins=2, boundaryType="lcro)", returnDT=TRUE)  # make the last bin [left-closed, right-open)
bin_data(vals=c(0,0,0,0,1,2,3,4), bins=4, binType="quantile", returnDT=TRUE)  # bin values by quantile

}

